apply plugin: 'com.android.application'

def internalCommonDataPath = "../../Android/app/src/main/assets/data"
def externalCommonDataPath = "../../Common/Data"
//def externalDataMakeFile = "../../Android-NDK/Android.mk"
def externalDataMakeFile = "../../Android-NDK/CMakeLists.txt"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    //sourceCompatibility = 1.8

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(".apk", "-${variant.versionName}-${variant.versionCode}.apk"))
        }
    }

    defaultConfig {
        applicationId "com.peer1.internetmap"
        minSdkVersion 21 // Currently having issues with 19 and pthreads
        targetSdkVersion 25

        versionCode 10
        versionName "2.0.1"

        // Not sure this is required, commenting out.
//        compileOptions {
//            sourceCompatibility JavaVersion.VERSION_1_5
//            targetCompatibility JavaVersion.VERSION_1_5
//        }



        //APP_ABI := armeabi x86

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DBoost_DEBUG=ON"
            }
        }

        ndk {
            moduleName "internetmaprenderer"
        }
    }

    buildTypes {
        debug {
            debuggable true
        }

        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    externalNativeBuild {
        cmake {
            path externalDataMakeFile
        }
    }

//    externalNativeBuild {
//        ndkBuild {
//            path externalDataMakeFile
//        }
//    }
}

task deleteCommonData(type: Delete) {
    description = 'Deleting common Data files'
    delete fileTree(internalCommonDataPath) {
        include '*.txt'
        include '*.json'
        include '*.html'
    }
}

task copyCommonData(type: Copy) {
    description = 'Copying common Data files'
    from externalCommonDataPath
    into internalCommonDataPath
    include '*.txt'
    include '*.json'
    include '*.html'
}

task synchCommonDataFiles {
    // Copying files directly is creating a relative link issue with the ExternalFiles folder
    dependsOn 'deleteCommonData'
    dependsOn 'copyCommonData'
    tasks.findByName('copyCommonData').mustRunAfter 'deleteCommonData'
}

// Copy over files from Common folder
preBuild.dependsOn(synchCommonDataFiles)

dependencies {
    compile 'com.android.support:support-v4:25.0.1'
    compile 'com.android.support:design:25.0.1'

    compile files('libs/android-async-http-1.4.2.jar')

    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'

    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'uk.co.chrisjenx:calligraphy:2.3.0'
    compile 'com.github.spyhunter99:super-tooltip-aar:4.0.0'
}
